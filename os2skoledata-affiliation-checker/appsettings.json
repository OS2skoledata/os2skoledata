{
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.Debug", "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Error",
        "Quartz": "Error"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u} {SourceContext} {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "Debug",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u} {SourceContext} {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "c:/logs/OS2skoledata Active Directory Sync/os2skoledata_affiliation_checker-.log",
          "shared": true,
          "rollingInterval": "Day",
          "retainedFileCountLimit": 10,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u} {SourceContext} {Message:lj}{NewLine}{Exception}"
        }
      }
    ]
  },
  "JobSettings": {
    "FullSyncCron": "0 43 2 * * ? *"
  },
  "SyncSettings": {
    // define where to fetch data from. If fetch from Opus file: OPUS. If fetch from SQL: SQL. If fetch from SOFD: SOFD This is mandatory
    "FetchDataFrom": "OPUS",
    // only needed if FetchDataFrom is OPUS
    "OpusWagesFile": "c:/Temp/opus/opus_demo.xml",
    // only needed if FetchDataFrom is SQL
    "SQLConnectionString": "Server=localhost;Database=os2skoledata_checker;User Id=testbruger;Password=TestTest22;",
    // only needed if FetchDataFrom is SQL. SQL statement to select what we need from a table/ view. We need employee_id, start_date, stop_date og cpr
    "SQLStatement": "SELECT employee_id, start_date, stop_date, cpr_number AS cpr FROM os2skoledata_checker.dbo.affiliations;",
    // only needed if FetchDataFrom is SOFD
    "SOFDBaseUrl": "",
    "SOFDApiKey": ""
  },
  "OS2skoledataSettings": {
    "BaseUrl": "https://kommune.os2skoledata.dk",
    "ApiKey": ""
  },
  "ActiveDirectorySettings": {
    // the distinguished name of the group this service will update with active employees. If left empty no group will be updated
    "ActiveEmployeesSecurityGroupDN": "CN=aktive_medarbejdere,OU=os2skoledata,DC=amalie,DC=dk",
    // used to find an AD user when adding to above group. Only needed if we are updating group. This is mandatory
    "CprField": "employeeID",
    // the distinguished name of the group created by OS2skoledata to make sure the affiliation is connected to an employee. This is mandatory
    "EmployeeSecurityGroupDN": "CN=alle_medarbejdere,OU=sikkerhedsgrupper,OU=os2skoledata,DC=amalie,DC=dk"
  }
}
