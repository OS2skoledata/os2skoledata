// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using os2skoledata_sql_sync.Config;

#nullable disable

namespace os2skoledata_sql_sync.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20230303093221_addInstitutionType")]
    partial class addInstitutionType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("country_code");

                    b.Property<string>("MunicipalityCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("municipality_code");

                    b.Property<string>("MunicipalityName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("municipality_name");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("postal_code");

                    b.Property<string>("PostalDistrict")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("postal_district");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("street_address");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.ContactPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AccessLevel")
                        .HasColumnType("int")
                        .HasColumnName("access_level");

                    b.Property<bool>("ChildCustody")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("child_custody");

                    b.Property<string>("Cvr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cvr");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.Property<string>("Pnr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pnr");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("relation");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int?>("UniLoginId")
                        .HasColumnType("int")
                        .HasColumnName("uni_login_id");

                    b.HasKey("Id")
                        .HasName("pk_contact_persons");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_contact_persons_person_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_contact_persons_student_id");

                    b.HasIndex("UniLoginId")
                        .HasDatabaseName("ix_contact_persons_uni_login_id");

                    b.ToTable("contact_persons", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Occupation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("occupation");

                    b.Property<string>("ShortName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_employees");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.EmployeeGroupId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("GroupId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_id");

                    b.HasKey("Id")
                        .HasName("pk_employee_group_id");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("ix_employee_group_id_employee_id");

                    b.ToTable("employee_group_id", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Extern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("pk_externs");

                    b.ToTable("externs", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.ExternGroupId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ExternId")
                        .HasColumnType("int")
                        .HasColumnName("extern_id");

                    b.Property<string>("GroupId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_id");

                    b.HasKey("Id")
                        .HasName("pk_extern_group_id");

                    b.HasIndex("ExternId")
                        .HasDatabaseName("ix_extern_group_id_extern_id");

                    b.ToTable("extern_group_id", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<string>("GroupId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_id");

                    b.Property<string>("GroupLevel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_level");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_name");

                    b.Property<string>("GroupType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_type");

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int")
                        .HasColumnName("institution_id");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Line")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("line");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("Id")
                        .HasName("pk_groups");

                    b.HasIndex("InstitutionId")
                        .HasDatabaseName("ix_groups_institution_id");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<string>("InstitutionName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("institution_name");

                    b.Property<string>("InstitutionNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("institution_number");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_institutions");

                    b.ToTable("institutions", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.InstitutionPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deleted");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int?>("ExternId")
                        .HasColumnType("int")
                        .HasColumnName("extern_id");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("LocalPersonId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("local_person_id");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.Property<string>("Source")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("source");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int?>("UniLoginId")
                        .HasColumnType("int")
                        .HasColumnName("uni_login_id");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.Property<int>("institutionId")
                        .HasColumnType("int")
                        .HasColumnName("institution_id");

                    b.HasKey("Id")
                        .HasName("pk_institution_persons");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("ix_institution_persons_employee_id");

                    b.HasIndex("ExternId")
                        .HasDatabaseName("ix_institution_persons_extern_id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_institution_persons_person_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_institution_persons_student_id");

                    b.HasIndex("UniLoginId")
                        .HasDatabaseName("ix_institution_persons_uni_login_id");

                    b.HasIndex("institutionId")
                        .HasDatabaseName("ix_institution_persons_institution_id");

                    b.ToTable("institution_persons", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<string>("AliasFamilyName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias_family_name");

                    b.Property<string>("AliasFirstName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias_first_name");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("CivilRegistrationNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("civil_registration_number");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email_address");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("family_name");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gender");

                    b.Property<int?>("HomePhoneNumberId")
                        .HasColumnType("int")
                        .HasColumnName("home_phone_number_id");

                    b.Property<int?>("MobilePhoneNumberId")
                        .HasColumnType("int")
                        .HasColumnName("mobile_phone_number_id");

                    b.Property<string>("PhotoId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo_id");

                    b.Property<bool>("Protected")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("protected");

                    b.Property<int>("VerificationLevel")
                        .HasColumnType("int")
                        .HasColumnName("verification_level");

                    b.Property<int?>("WorkPhoneNumberId")
                        .HasColumnType("int")
                        .HasColumnName("work_phone_number_id");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.HasIndex("AddressId")
                        .HasDatabaseName("ix_persons_address_id");

                    b.HasIndex("HomePhoneNumberId")
                        .HasDatabaseName("ix_persons_home_phone_number_id");

                    b.HasIndex("MobilePhoneNumberId")
                        .HasDatabaseName("ix_persons_mobile_phone_number_id");

                    b.HasIndex("WorkPhoneNumberId")
                        .HasDatabaseName("ix_persons_work_phone_number_id");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Protected")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("protected");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_phonenumbers");

                    b.ToTable("phonenumbers", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("EmployeeRole")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("employee_role");

                    b.Property<int>("employeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.HasKey("Id")
                        .HasName("pk_role");

                    b.HasIndex("employeeId")
                        .HasDatabaseName("ix_role_employee_id");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Level")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("level");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("MainGroupId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("main_group_id");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("StudentNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("student_number");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.StudentGroupId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("GroupId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("group_id");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("pk_student_group_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_student_group_id_student_id");

                    b.ToTable("student_group_id", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.UniLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CivilRegistrationNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("civil_registration_number");

                    b.Property<string>("InitialPassword")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("initial_password");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PasswordState")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_state");

                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_uni_logins");

                    b.ToTable("uni_logins", (string)null);
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.ContactPerson", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_contact_persons_persons_person_id");

                    b.HasOne("os2skoledata_sql_sync.Model.Student", "Student")
                        .WithMany("ContactPersons")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_contact_persons_students_student_id");

                    b.HasOne("os2skoledata_sql_sync.Model.UniLogin", "UniLogin")
                        .WithMany()
                        .HasForeignKey("UniLoginId")
                        .HasConstraintName("fk_contact_persons_uni_logins_uni_login_id");

                    b.Navigation("Person");

                    b.Navigation("Student");

                    b.Navigation("UniLogin");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.EmployeeGroupId", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Employee", "Employee")
                        .WithMany("GroupIds")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_employee_group_id_employees_employee_id");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.ExternGroupId", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Extern", "Extern")
                        .WithMany("GroupIds")
                        .HasForeignKey("ExternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_extern_group_id_externs_extern_id");

                    b.Navigation("Extern");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Group", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Institution", "Institution")
                        .WithMany("Groups")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_groups_institutions_institution_id");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.InstitutionPerson", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_institution_persons_employees_employee_id");

                    b.HasOne("os2skoledata_sql_sync.Model.Extern", "Extern")
                        .WithMany()
                        .HasForeignKey("ExternId")
                        .HasConstraintName("fk_institution_persons_externs_extern_id");

                    b.HasOne("os2skoledata_sql_sync.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_institution_persons_persons_person_id");

                    b.HasOne("os2skoledata_sql_sync.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .HasConstraintName("fk_institution_persons_students_student_id");

                    b.HasOne("os2skoledata_sql_sync.Model.UniLogin", "UniLogin")
                        .WithMany()
                        .HasForeignKey("UniLoginId")
                        .HasConstraintName("fk_institution_persons_uni_logins_uni_login_id");

                    b.HasOne("os2skoledata_sql_sync.Model.Institution", "Institution")
                        .WithMany("InstitutionPersons")
                        .HasForeignKey("institutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_institution_persons_institutions_institution_id");

                    b.Navigation("Employee");

                    b.Navigation("Extern");

                    b.Navigation("Institution");

                    b.Navigation("Person");

                    b.Navigation("Student");

                    b.Navigation("UniLogin");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Person", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_persons_addresses_address_id");

                    b.HasOne("os2skoledata_sql_sync.Model.PhoneNumber", "HomePhoneNumber")
                        .WithMany()
                        .HasForeignKey("HomePhoneNumberId")
                        .HasConstraintName("fk_persons_phonenumbers_home_phone_number_id");

                    b.HasOne("os2skoledata_sql_sync.Model.PhoneNumber", "MobilePhoneNumber")
                        .WithMany()
                        .HasForeignKey("MobilePhoneNumberId")
                        .HasConstraintName("fk_persons_phonenumbers_mobile_phone_number_id");

                    b.HasOne("os2skoledata_sql_sync.Model.PhoneNumber", "WorkPhoneNumber")
                        .WithMany()
                        .HasForeignKey("WorkPhoneNumberId")
                        .HasConstraintName("fk_persons_phonenumbers_work_phone_number_id");

                    b.Navigation("Address");

                    b.Navigation("HomePhoneNumber");

                    b.Navigation("MobilePhoneNumber");

                    b.Navigation("WorkPhoneNumber");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Role", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Employee", "Employee")
                        .WithMany("Roles")
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_role_employees_employee_id");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.StudentGroupId", b =>
                {
                    b.HasOne("os2skoledata_sql_sync.Model.Student", "Student")
                        .WithMany("GroupIds")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_student_group_id_students_student_id");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Employee", b =>
                {
                    b.Navigation("GroupIds");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Extern", b =>
                {
                    b.Navigation("GroupIds");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Institution", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("InstitutionPersons");
                });

            modelBuilder.Entity("os2skoledata_sql_sync.Model.Student", b =>
                {
                    b.Navigation("ContactPersons");

                    b.Navigation("GroupIds");
                });
#pragma warning restore 612, 618
        }
    }
}
